@page "/Items/{searchQuery}"
@page "/Items"
@using cAPParel.BlazorApp.Models
@using cAPParel.BlazorApp.Services.ItemServices
@inject cAPParel.BlazorApp.Services.ItemServices.IItemService itemService
@rendermode InteractiveServer

<style>
    .clickable {
        cursor: pointer;
    }
</style>

<div class="container">   
    @if (items is not null && items.Value is not null)
    {
        <h2>Items</h2>
        <div class="row">

                @foreach (var item in items.Value)
                {
                    var base64String = Convert.ToBase64String(item.FileData.FirstOrDefault(c => c.Type==DataType.Image).Data);
                    <div class="col-12 mb-3">
                        <div class="card clickable" style="width: 80%; height: 50vh; margin: auto; overflow: hidden;" @onclick="() => NavigateToItem(item.Id)">
                            <div class="row no-gutters">
                                <div class="col-md-6">
                                    <img src="data:image/png;base64,@base64String" class="d-block w-100 h-100" style="object-fit: contain;" alt="@item.Name">
                                </div>
                                <div class="col-md-6">
                                    <div class="card-body">
                                        <h5 class="card-title">@item.Name</h5>
                                        <p class="card-text">@item.Description</p>
                                        <p class="card-text"><strong>Price: </strong>@item.Price</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                
                }
        </div>
    }
    else if (items is null)
    {
        <div style="display: flex; justify-content: center; align-items: center;">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only"></span>
            </div>
        </div>
    }
    else
    {
        <h2>No matching results...</h2>
    }
</div>
@if (items.Links.Any(l => l.Rel == "nextPage"))
{ }
@if (items.Links.Any(l => l.Rel == "nextPage"))
{}

@code {
    [Parameter]
    public string? searchQuery { get; set; }
    private LinkedResourceList<ItemFullDto>? items;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            if(searchQuery is not null && searchQuery.Count()>0)
            {
                items = await itemService.GetItemsFullByQueryAsync(searchQuery);
            }
            else
            {
                items = await itemService.GetItemsFullAsync();
            }

            if (items is null)
            items = new LinkedResourceList<ItemFullDto>();

            StateHasChanged();

        }
    }

    private void NavigateToItem(int id)
    {
        throw new NotImplementedException();
    }
}
<style>
    h2 {
        text-align: center;
        color: orange;
        font-weight: 800;
    }
</style>